import xlrd
import matplotlib.pyplot as plt
import numpy as np
import scipy.signal as sp
import rampy
import pandas as pd

#读取excel文件
def Yexcel(filepath, sheetnum):
    wb = xlrd.open_workbook(filepath)# 打开Excel文件
    sheet = wb.sheet_by_name(sheetnum)#通过excel表格名称(rank)获取工作表
    dat = []  #创建空list
    for a in range(sheet.nrows):  #循环读取表格内容（每次读取一行数据）
                cells = sheet.row_values(a)  # 每行数据赋值给cells
                data=cells[0]#因为表内可能存在多列数据，0代表第一列数据，1代表第二列，以此类推
                data = data.split(',')
                data = list(map(float, data))
                dat.append(data) #把每次循环读取的数据插入到list
    return dat

# 所有数据按列取平均
def Ygetmean(excel):
    mean = [0] * len(excel[0])
    for each in excel:
        for num in range(len(each)):
            mean[num] += each[num]

    for num in range(len(mean)):
        mean[num] = mean[num] / len(excel)

    return mean

def Xexcel(filepath, sheetnum):
    wb = xlrd.open_workbook(filepath)  # 打开Excel文件
    sheet = wb.sheet_by_name(sheetnum)  # 通过excel表格名称(rank)获取工作表
    dat = []  # 创建空list
    for a in range(sheet.nrows):  # 循环读取表格内容（每次读取一行数据）
        cells = sheet.row_values(a)  # 每行数据赋值给cells
        data = cells[0]  # 因为表内可能存在多列数据，0代表第一列数据，1代表第二列，以此类推
        dat.append(data)  # 把每次循环读取的数据插入到list
    return dat


Raman_shift = Xexcel('../raman_data/raw_data/RamanShift.xlsx', 'Sheet1')

Normal_data = Yexcel('../raman_data/raw_data/she/no_origin_label0.xlsx', 'no_origin_label0') # Normal
Normal_data = Ygetmean(Normal_data)

Cancer_data = Yexcel('../raman_data/raw_data/she/no_origin_label1.xlsx', 'no_origin_label1') # cancer
Cancer_data = Ygetmean(Cancer_data)

# plt.plot(Raman_shift, Normal_data, ls="-", lw = 2, c = "c", label = "Normal")
# plt.plot(Raman_shift, Cancer_data, ls="-", lw = 1, c = "b", label = "Cancer")
#
# plt.legend()
# plt.xlabel("jia")

# plt.grid(linestyle = ":", color = "r")
# plt.show()
# plt.savefig('../raman_data/raw_data/she/she123.jpg')
# plt.close()

# Cancer_data = [52.25,58.25,46.25,47.25,61.25,49.25,40.25,55.25,36.25,52.25,53.25,39.25,53.25,45.25,46.25,55.25,53.25,56.25,48.25,67.25,48.25,60.25,62.25,34.25,60.25,41.25,57.25,71.25,49.25,41.25,52.25,58.25,40.25,56.25,48.25,80.25,57.25,73.25,50.25,42.25,57.25,40.25,64.25,51.25,58.25,74.25,59.25,57.25,68.25,72.25,93.25,130.25,189.25,311.25,585.25,886.25,1265.25,1565.25,1761.25,1840.25,1836.25,1835.25,1825.25,1886.25,1950.25,2000.25,2027.25,2097.25,2094.25,2113.25,2111.25,2132.25,2158.25,2193.25,2207.25,2284.25,2281.25,2262.25,2274.25,2273.25,2265.25,2242.25,2213.25,2188.25,2164.25,2154.25,2183.25,2177.25,2149.25,2086.25,2026.25,1926.25,1873.25,1773.25,1752.25,1707.25,1695.25,1639.25,1641.25,1589.25,1601.25,1598.25,1577.25,1586.25,1561.25,1624.25,1593.25,1618.25,1614.25,1603.25,1670.25,1559.25,1551.25,1541.25,1537.25,1530.25,1516.25,1516.25,1478.25,1451.25,1426.25,1449.25,1421.25,1398.25,1409.25,1393.25,1411.25,1424.25,1437.25,1446.25,1450.25,1449.25,1435.25,1477.25,1432.25,1433.25,1424.25,1443.25,1460.25,1465.25,1500.25,1493.25,1522.25,1534.25,1473.25,1506.25,1481.25,1476.25,1476.25,1475.25,1451.25,1466.25,1453.25,1435.25,1424.25,1389.25,1395.25,1348.25,1363.25,1348.25,1349.25,1341.25,1357.25,1324.25,1339.25,1325.25,1335.25,1325.25,1330.25,1289.25,1303.25,1301.25,1288.25,1293.25,1303.25,1280.25,1298.25,1294.25,1302.25,1313.25,1279.25,1294.25,1299.25,1289.25,1301.25,1281.25,1302.25,1290.25,1292.25,1278.25,1282.25,1286.25,1274.25,1286.25,1261.25,1236.25,1279.25,1243.25,1264.25,1227.25,1242.25,1249.25,1250.25,1239.25,1195.25,1203.25,1183.25,1188.25,1185.25,1170.25,1156.25,1178.25,1166.25,1140.25,1162.25,1138.25,1155.25,1139.25,1159.25,1120.25,1151.25,1137.25,1115.25,1127.25,1141.25,1120.25,1132.25,1142.25,1121.25,1108.25,1112.25,1107.25,1097.25,1074.25,1059.25,1079.25,1060.25,1071.25,1078.25,1039.25,1033.25,1052.25,1044.25,1040.25,1026.25,1038.25,1031.25,1002.25,1011.25,996.25,1002.25,999.25,972.25,959.25,969.25,977.25,995.25,952.25,967.25,956.25,960.25,957.25,938.25,933.25,953.25,941.25,913.25,922.25,904.25,944.25,931.25,925.25,948.25,932.25,958.25,925.25,907.25,880.25,873.25,884.25,894.25,870.25,871.25,858.25,861.25,864.25,851.25,851.25,857.25,849.25,832.25,814.25,826.25,817.25,825.25,804.25,832.25,802.25,803.25,802.25,801.25,791.25,806.25,778.25,799.25,775.25,780.25,771.25,794.25,779.25,775.25,772.25,776.25,781.25,758.25,781.25,799.25,776.25,768.25,770.25,777.25,751.25,749.25,751.25,722.25,720.25,714.25,724.25,698.25,691.25,704.25,681.25,679.25,676.25,661.25,643.25,682.25,654.25,664.25,659.25,635.25,626.25,634.25,637.25,628.25,641.25,614.25,616.25,600.25,603.25,580.25,591.25,609.25,601.25,591.25,589.25,596.25,594.25,578.25,602.25,574.25,582.25,574.25,571.25,564.25,564.25,546.25,551.25,559.25,543.25,538.25,540.25,522.25,530.25,525.25,519.25,520.25,516.25,505.25,515.25,515.25,504.25,489.25,475.25,485.25,508.25,472.25,489.25,484.25,482.25,487.25,464.25,446.25,458.25,470.25,463.25,470.25,468.25,457.25,431.25,453.25,427.25,441.25,434.25,421.25,423.25,416.25,412.25,400.25,409.25,384.25,408.25,381.25,387.25,392.25,372.25,366.25,338.25,336.25,340.25,354.25,333.25,321.25,344.25,337.25,321.25,319.25,311.25,311.25,537.25,308.25,312.25,296.25,329.25,301.25,294.25,297.25,297.25,297.25,302.25,280.25,287.25,304.25,295.25,284.25,299.25,289.25,299.25,302.25,283.25,282.25,300.25,285.25,308.25,299.25,280.25,295.25,292.25,296.25,278.25,275.25,271.25,286.25,292.25,288.25,273.25,285.25,286.25,286.25,295.25,291.25,272.25,276.25,275.25,258.25,268.25,280.25,280.25,284.25,272.25,258.25,268.25,268.25,270.25,272.25,275.25,263.25,262.25,272.25,263.25,255.25,251.25,257.25,237.25,251.25,255.25,247.25,274.25,253.25,243.25,256.25,228.25,234.25,234.25,228.25,252.25,246.25,232.25,245.25,240.25,223.25,233.25,219.25,217.25,229.25,215.25,216.25,223.25,229.25,216.25,216.25,214.25,223.25,214.25,202.25,214.25,207.25,198.25,227.25,203.25,198.25,198.25,202.25,236.25,209.25,191.25,195.25,219.25,209.25,191.25,193.25,203.25,202.25,203.25,173.25,186.25,174.25,181.25,196.25,193.25,197.25,190.25,191.25,209.25,185.25,183.25,176.25,175.25,187.25,170.25,173.25,157.25,181.25,197.25,166.25,166.25,172.25,178.25,171.25,162.25,167.25,164.25,182.25,164.25,165.25,159.25,163.25,167.25,186.25,151.25,163.25,159.25,147.25,180.25,139.25,159.25,165.25,159.25,137.25,147.25,140.25,154.25,143.25,154.25,143.25,157.25,147.25,142.25,153.25,149.25,155.25,147.25,153.25,136.25,126.25,148.25,141.25,127.25,148.25,138.25,123.25,145.25,143.25,137.25,149.25,156.25,148.25,126.25,146.25,126.25,137.25,148.25,148.25,158.25,145.25,148.25,161.25,141.25,155.25,157.25,158.25,159.25,156.25,151.25,161.25,140.25,139.25,158.25,146.25,163.25,169.25,167.25,175.25,177.25,185.25,164.25,173.25,149.25,171.25,165.25,175.25,178.25,156.25,152.25,165.25,148.25,152.25,136.25,131.25,150.25,131.25,127.25,113.25,121.25,113.25,116.25,124.25,109.25,103.25,119.25,109.25,97.25,104.25,113.25,96.25,98.25,121.25,93.25,84.25,96.25,113.25,95.25,113.25,90.25,100.25,93.25,104.25,80.25,99.25,93.25,96.25,104.25,86.25,85.25,101.25,89.25,100.25,85.25,83.25,81.25,90.25,84.25,93.25,87.25,107.25,83.25,77.25,93.25,79.25,85.25,93.25,84.25,85.25,103.25,99.25,104.25,96.25,90.25,86.25,92.25,80.25,84.25,88.25,83.25,66.25,86.25,79.25,76.25,74.25,78.25,83.25,99.25,71.25,75.25,73.25,68.25,87.25,84.25,79.25,71.25,85.25,75.25,72.25,76.25,78.25,69.25,66.25,97.25,106.25,89.25,80.25,77.25,64.25,73.25,83.25,70.25,60.25,75.25,79.25,69.25,72.25,90.25,64.25,69.25,68.25,98.25,66.25,81.25,55.25,78.25,73.25,69.25,82.25,74.25,72.25,77.25,68.25,73.25,66.25,69.25,73.25,55.25,76.25,73.25,77.25,67.25,78.25,59.25,84.25,75.25,88.25,79.25,74.25,62.25,74.25,69.25,74.25,60.25,75.25,72.25,72.25,75.25,63.25,97.25,69.25,58.25,79.25,58.25,47.25,73.25,55.25,66.25,82.25,61.25,60.25,51.25,51.25,65.25,60.25,62.25,69.25,62.25,65.25,68.25,48.25,70.25,53.25,53.25,59.25,67.25,56.25,56.25,70.25,68.25,61.25,50.25,51.25,53.25,53.25,39.25,49.25,56.25,71.25,44.25,46.25,65.25,91.25,53.25,51.25,59.25,48.25,45.25,54.25,62.25,56.25,53.25,45.25,64.25,42.25,42.25,30.25,48.25,36.25,42.25,63.25,54.25,50.25,41.25,48.25,53.25,39.25,52.25,50.25,52.25,46.25,49.25,41.25,67.25,47.25,52.25,46.25,54.25,41.25,68.25,36.25,50.25,30.25,42.25,53.25,25.25,69.25,50.25,46.25,50.25,65.25,45.25,42.25,46.25,27.25,40.25,52.25,34.25,46.25,51.25,55.25,40.25,43.25,38.25,47.25,40.25,58.25,36.25,53.25,42.25,28.25,39.25,36.25,52.25,55.25,34.25,52.25,31.25,31.25,42.25,45.25,54.25,35.25,33.25,38.25,45.25,46.25,18.25,30.25,33.25,34.25,50.25,43.25,49.25,34.25,27.25,39.25,32.25,35.25,45.25,49.25,34.25,56.25,44.25,43.25,67.25,62.25,33.25,27.25,39.25,50.25,40.25,32.25,40.25,37.25,39.25,37.25,45.25,49.25,38.25,30.25,34.25,50.25,31.25,43.25,45.25,35.25,48.25,26.25,14.25,27.25,53.25,45.25,29.25,33.25,26.25,44.25,49.25,56.25,33.25,14.25,42.25,23.25,22.25,39.25,51.25,34.25,53.25,37.25,47.25,40.25,64.25,33.25,44.25,37.25,41.25,33.25,40.25,38.25,47.25,22.25,69.25,29.25,38.25,37.25,48.25,24.25,37.25,42.25,64.25,47.25,47.25,31.25,64.25,50.25,41.25,46.25,47.25,36.25,46.25,14.25,7.25,1.25,-3.75,47.25,47.25,44.25,57.25,52.25,59.25,47.25,31.25,23.25,26.25,43.25,34.25,-18.75,1.25,4.25,-5.75]


Raman_shift = np.array(Raman_shift)
Normal_data = np.array(Normal_data)
Cancer_data = np.array(Cancer_data)
print("原始数据", Cancer_data.shape)
# 截取数据350~4000cm-1 #
Lower_limit = np.max(np.where(Raman_shift < 350))+1
Upper_limit = np.min(np.where(Raman_shift > 4000))+1

Raman_shift_limit = Raman_shift[Lower_limit:Upper_limit]
Cancer_data_limit = Cancer_data[Lower_limit:Upper_limit]
Normal_data_limit = Normal_data[Lower_limit:Upper_limit]

# SG平滑处理#
Cancer_data_SG = sp.savgol_filter(Cancer_data_limit, 11, 2)
Normal_data_SG = sp.savgol_filter(Normal_data_limit, 11, 2)


# 去基线处理 #
roi = np.array([[350, 4000]])
Cancer_data_final, Cancer_base_Intensity = rampy.baseline(Raman_shift_limit, Cancer_data_SG, roi, 'arPLS', lam=10 ** 6, ratio=0.001)
Normal_data_final, Normal_base_Intensity = rampy.baseline(Raman_shift_limit, Normal_data_SG, roi, 'arPLS', lam=10 ** 6, ratio=0.001)


# she_label_1 = (she_label_1 - (np.min(she_label_1)))/(np.max(she_label_1) - np.min(she_label_1)) # 归一化
# plt.plot(Raman_shift_limit, Normal_data_final, ls="-", lw = 2, c = "c", label = "Normal")

# 帮师兄处理数据用道德
# Cancer_data_final = Cancer_data_final.reshape(-1,).tolist()
# print("预处理数据", len(Cancer_data_final))
# print(Cancer_data_final)

plt.plot(Raman_shift_limit, Cancer_data_final, ls="-", lw = 1, c = "b")

plt.legend()
plt.grid(linestyle = ":", color = "r")
# plt.savefig('../raman_data/raw_data/she/she_alter.jpg')

# save = pd.DataFrame(Raman_shift_limit)
# save.to_csv('../raman_data/raw_data/jia/Raman_shift_limit.csv', mode='a')
#
# save = pd.DataFrame(Normal_data_final)
# save.to_csv('../raman_data/raw_data/jia/Normal_data_final.csv', mode='a')
#
# save = pd.DataFrame(Cancer_data_final)
# save.to_csv('../raman_data/raw_data/jia/Cancer_data_final.csv', mode='a')

plt.show()
